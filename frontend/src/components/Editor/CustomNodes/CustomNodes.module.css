.customNode {
  background: #ffffff;
  border: 2px solid #e5e7eb;
  border-radius: 8px;
  min-width: 180px;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  transition: all 0.2s;
  position: relative;
  cursor: grab;
  user-select: none;
}

.customNode:active {
  cursor: grabbing;
}

.customNode:hover {
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
}

.customNode.selected {
  border-color: #3b82f6;
  box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
}

.nodeHeader {
  padding: 8px 12px;
  color: white;
  font-weight: 600;
  font-size: 12px;
  text-transform: uppercase;
  letter-spacing: 0.5px;
  display: flex;
  align-items: center;
  gap: 6px;
  border-radius: 6px 6px 0 0;
  pointer-events: none;
}

.nodeIcon {
  font-size: 14px;
}

.nodeTitle {
  flex: 1;
}

.nodeContent {
  padding: 12px;
  pointer-events: none;
}

.nodeLabel {
  font-size: 14px;
  font-weight: 500;
  color: #111827;
  margin-bottom: 4px;
  line-height: 1.3;
}

.nodeSubtext {
  font-size: 12px;
  color: #6b7280;
}

.handle {
  width: 12px;
  height: 12px;
  border: 2px solid #ffffff;
  border-radius: 50%;
  transition: all 0.2s;
}

.handle:hover {
  transform: scale(1.2);
}

/* Start Node Styles */
.startNode {
  border-left: 4px solid #22c55e;
}

.startNode .nodeHeader {
  background: #22c55e;
}

/* Trigger Node Styles */
.triggerNode {
  border-left: 4px solid #3b82f6;
}

.triggerNode .nodeHeader {
  background: #3b82f6;
}

/* Action Node Styles */
.actionNode {
  border-left: 4px solid #10b981;
}

.actionNode .nodeHeader {
  background: #10b981;
}

/* Condition Node Styles */
.conditionNode {
  min-width: 200px;
  border-left: 4px solid #f59e0b;
}

.conditionNode .nodeHeader {
  background: #f59e0b;
}

.conditionOutputs {
  position: relative;
}

.outputLabels {
  position: absolute;
  right: -35px;
  top: 0;
  height: 100%;
  pointer-events: none;
}

.outputLabel {
  position: absolute;
  font-size: 10px;
  font-weight: 500;
  color: #6b7280;
  background: #ffffff;
  padding: 2px 4px;
  border-radius: 3px;
  border: 1px solid #e5e7eb;
  transform: translateY(-50%);
}

.trueHandle {
  background: #10b981 !important;
}

.falseHandle {
  background: #ef4444 !important;
}

/* Data Node Styles */
.dataNode {
  border-left: 4px solid #8b5cf6;
}

.dataNode .nodeHeader {
  background: #8b5cf6;
}

/* Integration Node Styles */
.integrationNode {
  border-left: 4px solid #f97316;
}

.integrationNode .nodeHeader {
  background: #f97316;
}

/* Scenario Node Styles */
.scenarioNode {
  border-left: 4px solid #06b6d4;
}

.scenarioNode .nodeHeader {
  background: #06b6d4;
}

/* –°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —É–∑–ª—ã */
.commandTriggerNode {
  border-left: 4px solid #1d4ed8;
}

.mediaActionNode {
  border-left: 4px solid #059669;
}

.textConditionNode {
  border-left: 4px solid #d97706;
}

/* –ù–æ–≤—ã–µ —É–∑–ª—ã */
.startNode {
  border-left: 4px solid #22c55e;
}

.webhookNode {
  border-left: 4px solid #3b82f6;
}

.switchNode {
  border-left: 4px solid #f59e0b;
  min-width: 220px;
}

.switchNode .outputLabels {
  position: absolute;
  right: -45px;
  top: 0;
  height: 100%;
  pointer-events: none;
}

.switchNode .outputLabel {
  position: absolute;
  font-size: 10px;
  font-weight: 500;
  color: #6b7280;
  background: #ffffff;
  padding: 2px 6px;
  border-radius: 3px;
  border: 1px solid #e5e7eb;
  transform: translateY(-50%);
  white-space: nowrap;
}

/* –°—Ç–∏–ª–∏ –¥–ª—è –∫–æ–¥–∞ –∏ –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤ */
.commandText {
  background-color: #f3f4f6;
  padding: 2px 4px;
  border-radius: 3px;
  font-family: 'Courier New', monospace;
  font-size: 11px;
  color: #374151;
}

.patternText {
  background-color: #fef3c7;
  padding: 2px 4px;
  border-radius: 3px;
  font-family: 'Courier New', monospace;
  font-size: 11px;
  color: #92400e;
}

/* –û–ø–∏—Å–∞–Ω–∏–µ —É–∑–ª–∞ */
.nodeDescription {
  font-size: 10px;
  color: #6b7280;
  margin-top: 2px;
  font-style: italic;
  max-width: 140px;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

/* –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ –º–µ–Ω—é */
.interactiveMenuNode {
  min-width: 200px;
  border-left: 4px solid #3b82f6;
}

.interactiveMenuNode .nodeHeader {
  background: #3b82f6;
}

.messagePreview {
  font-size: 12px;
  color: #6b7280;
  margin-bottom: 8px;
  max-height: 40px;
  overflow: hidden;
  text-overflow: ellipsis;
}

.buttonPreview {
  display: flex;
  flex-direction: column;
  gap: 4px;
}

.buttonRow {
  display: flex;
  gap: 4px;
}

.previewButton {
  background: #dbeafe;
  color: #1d4ed8;
  padding: 2px 6px;
  border-radius: 4px;
  font-size: 10px;
  text-align: center;
  flex: 1;
  min-width: 0;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.emptyButtons {
  color: #9ca3af;
  font-size: 11px;
  font-style: italic;
  text-align: center;
  padding: 8px;
  border: 1px dashed #d1d5db;
  border-radius: 4px;
}

/* –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ */
.entryPointNode {
  border-left: 4px solid #22c55e;
}

.entryPointNode .nodeHeader {
  background: #22c55e;
}

.triggerInfo {
  text-align: center;
}

.triggerLabel {
  font-weight: 600;
  color: #16a34a;
  font-size: 14px;
  margin-bottom: 4px;
}

.triggerDescription {
  font-size: 11px;
  color: #6b7280;
}

/* Hidden handles for ReactFlow compatibility */
.hiddenHandle {
  opacity: 0 !important;
  pointer-events: none !important;
  width: 1px !important;
  height: 1px !important;
}

/* Responsive adjustments */
@media (max-width: 768px) {
  .customNode {
    min-width: 160px;
  }
  
  .nodeContent {
    padding: 10px;
  }
  
  .nodeLabel {
    font-size: 13px;
  }
  
  .nodeSubtext {
    font-size: 11px;
  }
}/*
 EntryPoint Node Styles */
.entryPointNode {
  background: linear-gradient(135deg, #10b981 0%, #059669 100%);
  border: 3px solid #047857;
  color: white;
  min-width: 200px;
  box-shadow: 0 8px 25px rgba(16, 185, 129, 0.3);
  position: relative;
}

.entryPointNode::before {
  content: 'üöÄ –°–¢–ê–†–¢';
  position: absolute;
  top: -12px;
  left: 50%;
  transform: translateX(-50%);
  background: #047857;
  color: white;
  padding: 2px 8px;
  border-radius: 10px;
  font-size: 10px;
  font-weight: bold;
  letter-spacing: 0.5px;
}

.entryPointNode:hover {
  box-shadow: 0 12px 35px rgba(16, 185, 129, 0.4);
  transform: translateY(-2px);
  transition: all 0.3s ease;
}

.entryPointNode .nodeHeader {
  background: rgba(255, 255, 255, 0.2);
}

.entryPointNode .triggerInfo {
  text-align: center;
}

.entryPointNode .triggerLabel {
  font-size: 16px;
  font-weight: bold;
  margin-bottom: 4px;
}

.entryPointNode .triggerDescription {
  font-size: 12px;
  opacity: 0.9;
}