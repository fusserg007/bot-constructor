import React from 'react';
import { Handle, Position, NodeProps } from 'reactflow';
// import { getNodeLocalization } from '../../../utils/localization';
import styles from './CustomNodes.module.css';

interface EntryPointData {
  triggerType: 'start_command' | 'first_message' | 'webhook' | 'custom_command';
  command?: string;
  description: string;
  webhookUrl?: string;
}

const EntryPointNode: React.FC<NodeProps<EntryPointData>> = React.memo(({ 
  data, 
  selected 
}) => {
  const getTriggerIcon = () => {
    switch (data.triggerType) {
      case 'start_command':
        return 'üöÄ';
      case 'first_message':
        return 'üí¨';
      case 'webhook':
        return 'üì°';
      case 'custom_command':
        return '‚ö°';
      default:
        return 'üöÄ';
    }
  };

  const getTriggerLabel = () => {
    switch (data.triggerType) {
      case 'start_command':
        return '/start';
      case 'first_message':
        return '–ü–µ—Ä–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ';
      case 'webhook':
        return 'Webhook';
      case 'custom_command':
        return data.command || '/–∫–æ–º–∞–Ω–¥–∞';
      default:
        return '–¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞';
    }
  };

  return (
    <div 
      className={`${styles.customNode} ${styles.entryPointNode} ${selected ? styles.selected : ''}`}
    >
      <div className={styles.nodeHeader}>
        <div className={styles.nodeIcon}>{getTriggerIcon()}</div>
        <div className={styles.nodeTitle}>–¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞</div>
      </div>
      
      <div className={styles.nodeContent}>
        <div className={styles.triggerInfo}>
          <div className={styles.triggerLabel}>{getTriggerLabel()}</div>
          <div className={styles.triggerDescription}>
            {data.description || '–ù–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞'}
          </div>
        </div>
      </div>

      {/* –¢–æ–ª—å–∫–æ –≤—ã—Ö–æ–¥–Ω–æ–π –ø–æ—Ä—Ç - —Ç–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –Ω–µ –∏–º–µ–µ—Ç –≤—Ö–æ–¥–æ–≤ */}
      <Handle
        type="source"
        position={Position.Right}
        id="output"
        className={styles.handle}
      />
    </div>
  );
}, (prevProps, nextProps) => {
  // –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –ª–∏—à–Ω–∏—Ö —Ä–µ-—Ä–µ–Ω–¥–µ—Ä–æ–≤
  return (
    prevProps.selected === nextProps.selected &&
    prevProps.data.triggerType === nextProps.data.triggerType &&
    prevProps.data.command === nextProps.data.command &&
    prevProps.data.description === nextProps.data.description &&
    prevProps.data.webhookUrl === nextProps.data.webhookUrl
  );
});

EntryPointNode.displayName = 'EntryPointNode';

export default EntryPointNode;