/**
 * –ú–µ–Ω–µ–¥–∂–µ—Ä –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ BotConstructor
 * –û–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –Ω–∞–¥–µ–∂–Ω—É—é –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é —Å –æ—Ç–ª–∞–¥–∫–æ–π –∏ fallback –º–µ—Ö–∞–Ω–∏–∑–º–∞–º–∏
 */
class BotConstructorManager {
    constructor() {
        this.initAttempts = 0;
        this.maxAttempts = 5;
        this.retryDelay = 1000;
        this.isInitialized = false;
        this.initPromise = null;
        
        // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
        this.logger = window.editorDebugger || console;
        
        this.logger.info?.('BotConstructorManager —Å–æ–∑–¥–∞–Ω') || console.log('üîß BotConstructorManager —Å–æ–∑–¥–∞–Ω');
    }
    
    /**
     * –û—Å–Ω–æ–≤–Ω–æ–π –º–µ—Ç–æ–¥ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
     */
    async initialize() {
        if (this.initPromise) {
            return this.initPromise;
        }
        
        this.initPromise = this._performInitialization();
        return this.initPromise;
    }
    
    async _performInitialization() {
        this.logger.info?.('–ù–∞—á–∞–ª–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ BotConstructor') || console.log('üöÄ –ù–∞—á–∞–ª–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ BotConstructor');
        
        while (this.initAttempts < this.maxAttempts && !this.isInitialized) {
            this.initAttempts++;
            
            try {
                this.logger.info?.(`–ü–æ–ø—ã—Ç–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ #${this.initAttempts}`) || console.log(`üîÑ –ü–æ–ø—ã—Ç–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ #${this.initAttempts}`);
                
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å DOM
                await this._waitForDOM();
                
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
                this._checkDependencies();
                
                // –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä BotConstructor
                await this._createBotConstructor();
                
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ø–µ—à–Ω–æ—Å—Ç—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
                await this._validateInitialization();
                
                this.isInitialized = true;
                this.logger.success?.('BotConstructor —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω') || console.log('‚úÖ BotConstructor —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
                
                return window.botConstructor;
                
            } catch (error) {
                this.logger.error?.(`–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ (–ø–æ–ø—ã—Ç–∫–∞ ${this.initAttempts})`, error) || console.error(`‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ (–ø–æ–ø—ã—Ç–∫–∞ ${this.initAttempts}):`, error);
                
                if (this.initAttempts < this.maxAttempts) {
                    this.logger.warn?.(`–ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞ —á–µ—Ä–µ–∑ ${this.retryDelay}ms`) || console.warn(`‚è≥ –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞ —á–µ—Ä–µ–∑ ${this.retryDelay}ms`);
                    await this._delay(this.retryDelay);
                    this.retryDelay *= 1.5; // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∑–∞–¥–µ—Ä–∂–∫—É
                } else {
                    this.logger.error?.('–í—Å–µ –ø–æ–ø—ã—Ç–∫–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∏—Å—á–µ—Ä–ø–∞–Ω—ã') || console.error('üí• –í—Å–µ –ø–æ–ø—ã—Ç–∫–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∏—Å—á–µ—Ä–ø–∞–Ω—ã');
                    this._showFallbackInterface(error);
                    throw error;
                }
            }
        }
    }
    
    /**
     * –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ DOM
     */
    async _waitForDOM() {
        return new Promise((resolve) => {
            if (document.readyState === 'loading') {
                document.addEventListener('DOMContentLoaded', resolve);
            } else {
                resolve();
            }
        });
    }
    
    /**
     * –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
     */
    _checkDependencies() {
        const dependencies = {
            'BotConstructor': typeof BotConstructor !== 'undefined',
            'document.body': !!document.body,
            'fetch': typeof fetch !== 'undefined'
        };
        
        const missing = Object.entries(dependencies)
            .filter(([name, available]) => !available)
            .map(([name]) => name);
        
        if (missing.length > 0) {
            throw new Error(`–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: ${missing.join(', ')}`);
        }
        
        this.logger.debug?.('–í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –¥–æ—Å—Ç—É–ø–Ω—ã', dependencies) || console.log('‚úÖ –í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –¥–æ—Å—Ç—É–ø–Ω—ã');
    }
    
    /**
     * –°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ BotConstructor
     */
    async _createBotConstructor() {
        this.logger.info?.('–°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ BotConstructor') || console.log('üèóÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ BotConstructor');
        
        // –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π —ç–∫–∑–µ–º–ø–ª—è—Ä –µ—Å–ª–∏ –µ—Å—Ç—å
        if (window.botConstructor) {
            this.logger.warn?.('–ù–∞–π–¥–µ–Ω –ø—Ä–µ–¥—ã–¥—É—â–∏–π —ç–∫–∑–µ–º–ø–ª—è—Ä, –æ—á–∏—â–∞–µ–º') || console.warn('‚ö†Ô∏è –ù–∞–π–¥–µ–Ω –ø—Ä–µ–¥—ã–¥—É—â–∏–π —ç–∫–∑–µ–º–ø–ª—è—Ä, –æ—á–∏—â–∞–µ–º');
            delete window.botConstructor;
        }
        
        // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä
        window.botConstructor = new BotConstructor();
        
        // –î–∞–µ–º –≤—Ä–µ–º—è –Ω–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é
        await this._delay(100);
    }
    
    /**
     * –í–∞–ª–∏–¥–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ—Å—Ç–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
     */
    async _validateInitialization() {
        const validations = [
            {
                name: 'window.botConstructor —Å—É—â–µ—Å—Ç–≤—É–µ—Ç',
                check: () => !!window.botConstructor
            },
            {
                name: 'BotConstructor –∏–º–µ–µ—Ç –º–µ—Ç–æ–¥ showView',
                check: () => typeof window.botConstructor.showView === 'function'
            },
            {
                name: 'BotConstructor –∏–º–µ–µ—Ç –º–µ—Ç–æ–¥ loadDashboardData',
                check: () => typeof window.botConstructor.loadDashboardData === 'function'
            },
            {
                name: 'backToDashboard —Ñ—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞',
                check: () => typeof window.backToDashboard === 'function'
            },
            {
                name: 'dashboard-view —ç–ª–µ–º–µ–Ω—Ç —Å—É—â–µ—Å—Ç–≤—É–µ—Ç',
                check: () => !!document.getElementById('dashboard-view')
            },
            {
                name: 'constructor-view —ç–ª–µ–º–µ–Ω—Ç —Å—É—â–µ—Å—Ç–≤—É–µ—Ç',
                check: () => !!document.getElementById('constructor-view')
            }
        ];
        
        const failed = [];
        
        for (const validation of validations) {
            try {
                if (!validation.check()) {
                    failed.push(validation.name);
                }
            } catch (error) {
                failed.push(`${validation.name} (–æ—à–∏–±–∫–∞: ${error.message})`);
            }
        }
        
        if (failed.length > 0) {
            const errorMsg = `–í–∞–ª–∏–¥–∞—Ü–∏—è –Ω–µ –ø—Ä–æ–π–¥–µ–Ω–∞: ${failed.join(', ')}`;
            this.logger.error?.(errorMsg) || console.error('‚ùå ' + errorMsg);
            throw new Error(errorMsg);
        }
        
        this.logger.success?.('–í–∞–ª–∏–¥–∞—Ü–∏—è –ø—Ä–æ–π–¥–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ') || console.log('‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è –ø—Ä–æ–π–¥–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ');
    }
    
    /**
     * –ü–æ–∫–∞–∑ fallback –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –ø—Ä–∏ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–π –æ—à–∏–±–∫–µ
     */
    _showFallbackInterface(error) {
        this.logger.error?.('–ü–æ–∫–∞–∑ fallback –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞', error) || console.error('üÜò –ü–æ–∫–∞–∑ fallback –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞:', error);
        
        // –°–æ–∑–¥–∞–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
        const fallbackHTML = `
            <div id="fallback-interface" style="
                position: fixed;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                background: #f8f9fa;
                z-index: 10000;
                display: flex;
                flex-direction: column;
                align-items: center;
                justify-content: center;
                font-family: Arial, sans-serif;
            ">
                <div style="
                    background: white;
                    padding: 2rem;
                    border-radius: 8px;
                    box-shadow: 0 4px 12px rgba(0,0,0,0.15);
                    max-width: 500px;
                    text-align: center;
                ">
                    <h2 style="color: #dc3545; margin-bottom: 1rem;">‚ö†Ô∏è –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏</h2>
                    <p style="margin-bottom: 1rem; color: #666;">
                        –ù–µ —É–¥–∞–ª–æ—Å—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å Bot Constructor –ø–æ—Å–ª–µ ${this.initAttempts} –ø–æ–ø—ã—Ç–æ–∫.
                    </p>
                    <details style="margin-bottom: 1rem; text-align: left;">
                        <summary style="cursor: pointer; color: #007bff;">–ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –æ—à–∏–±–∫–∏</summary>
                        <pre style="
                            background: #f8f9fa;
                            padding: 1rem;
                            border-radius: 4px;
                            margin-top: 0.5rem;
                            font-size: 12px;
                            overflow: auto;
                        ">${error.message}

${error.stack || ''}</pre>
                    </details>
                    <div style="display: flex; gap: 1rem; justify-content: center;">
                        <button onclick="location.reload()" style="
                            background: #007bff;
                            color: white;
                            border: none;
                            padding: 0.5rem 1rem;
                            border-radius: 4px;
                            cursor: pointer;
                        ">üîÑ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É</button>
                        <button onclick="window.botConstructorManager.initialize()" style="
                            background: #28a745;
                            color: white;
                            border: none;
                            padding: 0.5rem 1rem;
                            border-radius: 4px;
                            cursor: pointer;
                        ">üîÅ –ü–æ–≤—Ç–æ—Ä–∏—Ç—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é</button>
                    </div>
                    <div style="margin-top: 1rem; font-size: 12px; color: #999;">
                        –ï—Å–ª–∏ –ø—Ä–æ–±–ª–µ–º–∞ –ø–æ–≤—Ç–æ—Ä—è–µ—Ç—Å—è, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É
                    </div>
                </div>
            </div>
        `;
        
        document.body.insertAdjacentHTML('beforeend', fallbackHTML);
    }
    
    /**
     * –£—Ç–∏–ª–∏—Ç–∞ –∑–∞–¥–µ—Ä–∂–∫–∏
     */
    _delay(ms) {
        return new Promise(resolve => setTimeout(resolve, ms));
    }
    
    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
     */
    getStatus() {
        return {
            isInitialized: this.isInitialized,
            attempts: this.initAttempts,
            maxAttempts: this.maxAttempts,
            botConstructorExists: !!window.botConstructor,
            backToDashboardExists: !!window.backToDashboard
        };
    }
    
    /**
     * –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –ø–µ—Ä–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
     */
    async reinitialize() {
        this.logger.warn?.('–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –ø–µ—Ä–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è') || console.warn('üîÑ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –ø–µ—Ä–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è');
        
        this.isInitialized = false;
        this.initAttempts = 0;
        this.initPromise = null;
        this.retryDelay = 1000;
        
        // –£–¥–∞–ª—è–µ–º fallback –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –µ—Å–ª–∏ –µ—Å—Ç—å
        const fallback = document.getElementById('fallback-interface');
        if (fallback) {
            fallback.remove();
        }
        
        return this.initialize();
    }
}

// –°–æ–∑–¥–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –º–µ–Ω–µ–¥–∂–µ—Ä–∞
window.botConstructorManager = new BotConstructorManager();

// –ê–≤—Ç–æ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ—Ç–∫–ª—é—á–µ–Ω–∞ - –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤—Ä—É—á–Ω—É—é –∏–∑ index.html

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª—è—Ö
window.BotConstructorManager = BotConstructorManager;