/**
 * –¢–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã polling
 */

import { PollingManager } from './core/polling/PollingManager';
import { TelegramAdapter } from './adapters/TelegramAdapter';
import { MaxAdapter } from './adapters/MaxAdapter';

async function testPolling() {
  console.log('üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã polling...');

  const pollingManager = PollingManager.getInstance();

  // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –∞–¥–∞–ø—Ç–µ—Ä—ã
  const telegramAdapter = new TelegramAdapter();
  const maxAdapter = new MaxAdapter();

  try {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∞–¥–∞–ø—Ç–µ—Ä—ã —Å —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
    await telegramAdapter.initialize({
      telegram: {
        token: 'test_token'
      }
    });

    await maxAdapter.initialize({
      max: {
        apiKey: 'test_api_key',
        secretKey: 'test_secret_key'
      }
    });

    // –ó–∞–ø—É—Å–∫–∞–µ–º polling –¥–ª—è Telegram
    pollingManager.startPolling('test-telegram-bot', telegramAdapter, {
      interval: 2000,
      timeout: 10000,
      enabled: true
    });

    // –ó–∞–ø—É—Å–∫–∞–µ–º polling –¥–ª—è MAX
    pollingManager.startPolling('test-max-bot', maxAdapter, {
      interval: 3000,
      timeout: 15000,
      enabled: true
    });

    console.log('‚úÖ Polling –∑–∞–ø—É—â–µ–Ω –¥–ª—è –æ–±–æ–∏—Ö –∞–¥–∞–ø—Ç–µ—Ä–æ–≤');

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
    setTimeout(() => {
      const stats = pollingManager.getPollingStats();
      console.log('üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ polling:');
      stats.forEach(stat => {
        console.log(`  ${stat.platform}: –∞–∫—Ç–∏–≤–µ–Ω=${stat.isActive}, –∑–∞–ø—Ä–æ—Å–æ–≤=${stat.requestCount}, –æ—à–∏–±–æ–∫=${stat.errorCount}`);
      });

      const overallStats = pollingManager.getOverallStats();
      console.log('üìà –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:', overallStats);

      // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º polling
      pollingManager.stopAllPolling();
      console.log('üõë Polling –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
    }, 5000);

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ polling:', error);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Ñ–∞–π–ª –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –Ω–∞–ø—Ä—è–º—É—é
if (require.main === module) {
  testPolling().catch(console.error);
}

export { testPolling };