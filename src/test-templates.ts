/**
 * –¢–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã —à–∞–±–ª–æ–Ω–æ–≤
 */
import { TemplateManager } from './core/templates/TemplateManager';
import { TemplateService } from './core/templates/TemplateService';

async function testTemplateSystem() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã —à–∞–±–ª–æ–Ω–æ–≤...\n');

  try {
    // –¢–µ—Å—Ç TemplateManager
    console.log('1. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ TemplateManager:');
    const templateManager = TemplateManager.getInstance();
    
    const allTemplates = templateManager.getAllTemplates();
    console.log(`   ‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ ${allTemplates.length} —à–∞–±–ª–æ–Ω–æ–≤`);
    
    const categories = templateManager.getAllCategories();
    console.log(`   ‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ ${categories.length} –∫–∞—Ç–µ–≥–æ—Ä–∏–π`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —à–∞–±–ª–æ–Ω—ã
    const welcomeBot = templateManager.getTemplate('welcome-bot');
    if (welcomeBot) {
      console.log(`   ‚úÖ –ù–∞–π–¥–µ–Ω —à–∞–±–ª–æ–Ω: ${welcomeBot.name}`);
      console.log(`      - –ö–∞—Ç–µ–≥–æ—Ä–∏—è: ${welcomeBot.category}`);
      console.log(`      - –°–ª–æ–∂–Ω–æ—Å—Ç—å: ${welcomeBot.difficulty}`);
      console.log(`      - –ü–ª–∞—Ç—Ñ–æ—Ä–º—ã: ${welcomeBot.platforms.join(', ')}`);
    }

    // –¢–µ—Å—Ç –ø–æ–∏—Å–∫–∞
    const businessTemplates = templateManager.getTemplatesByCategory('business');
    console.log(`   ‚úÖ –ù–∞–π–¥–µ–Ω–æ ${businessTemplates.length} –±–∏–∑–Ω–µ—Å-—à–∞–±–ª–æ–Ω–æ–≤`);

    const searchResults = templateManager.searchTemplates('–±–æ—Ç', { difficulty: 'beginner' });
    console.log(`   ‚úÖ –ü–æ–∏—Å–∫ "–±–æ—Ç" (–Ω–∞—á–∏–Ω–∞—é—â–∏–π): ${searchResults.length} —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤`);

    // –¢–µ—Å—Ç –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
    const clonedSchema = templateManager.cloneTemplate('welcome-bot', '–ú–æ–π –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π –±–æ—Ç');
    if (clonedSchema) {
      console.log(`   ‚úÖ –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω —à–∞–±–ª–æ–Ω: ${clonedSchema.name}`);
      console.log(`      - ID: ${clonedSchema.id}`);
      console.log(`      - –£–∑–ª–æ–≤: ${clonedSchema.nodes.length}`);
      console.log(`      - –°–≤—è–∑–µ–π: ${clonedSchema.edges.length}`);
    }

    console.log('\n2. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ TemplateService:');
    const templateService = new TemplateService();
    
    // –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö —à–∞–±–ª–æ–Ω–æ–≤
    const serviceTemplates = await templateService.getAllTemplates();
    console.log(`   ‚úÖ –°–µ—Ä–≤–∏—Å: –ø–æ–ª—É—á–µ–Ω–æ ${serviceTemplates.length} —à–∞–±–ª–æ–Ω–æ–≤`);

    // –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π
    const serviceCategories = await templateService.getCategories();
    console.log(`   ‚úÖ –°–µ—Ä–≤–∏—Å: –ø–æ–ª—É—á–µ–Ω–æ ${serviceCategories.length} –∫–∞—Ç–µ–≥–æ—Ä–∏–π`);

    // –¢–µ—Å—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    const stats = await templateService.getTemplateStats();
    console.log(`   ‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:`);
    console.log(`      - –í—Å–µ–≥–æ —à–∞–±–ª–æ–Ω–æ–≤: ${stats.totalTemplates}`);
    console.log(`      - –ö–∞—Ç–µ–≥–æ—Ä–∏–π: ${stats.categoriesCount}`);
    console.log(`      - –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:`, stats.popularCategories);
    console.log(`      - –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏:`, stats.difficultyDistribution);

    // –¢–µ—Å—Ç —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
    const recommended = await templateService.getRecommendedTemplates();
    console.log(`   ‚úÖ –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã—Ö —à–∞–±–ª–æ–Ω–æ–≤: ${recommended.length}`);

    const popular = await templateService.getPopularTemplates();
    console.log(`   ‚úÖ –ü–æ–ø—É–ª—è—Ä–Ω—ã—Ö —à–∞–±–ª–æ–Ω–æ–≤: ${popular.length}`);

    // –¢–µ—Å—Ç –≤–∞–ª–∏–¥–∞—Ü–∏–∏
    if (serviceTemplates.length > 0) {
      const validation = await templateService.validateTemplate(serviceTemplates[0]);
      console.log(`   ‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è –ø–µ—Ä–≤–æ–≥–æ —à–∞–±–ª–æ–Ω–∞:`);
      console.log(`      - –í–∞–ª–∏–¥–µ–Ω: ${validation.isValid}`);
      console.log(`      - –û—à–∏–±–æ–∫: ${validation.errors.length}`);
      console.log(`      - –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π: ${validation.warnings.length}`);
    }

    // –¢–µ—Å—Ç —ç–∫—Å–ø–æ—Ä—Ç–∞/–∏–º–ø–æ—Ä—Ç–∞
    const exportedTemplate = await templateService.exportTemplate('welcome-bot');
    if (exportedTemplate) {
      console.log(`   ‚úÖ –≠–∫—Å–ø–æ—Ä—Ç —à–∞–±–ª–æ–Ω–∞: ${exportedTemplate.length} —Å–∏–º–≤–æ–ª–æ–≤`);
      
      const importResult = await templateService.importTemplate(exportedTemplate);
      console.log(`   ‚úÖ –ò–º–ø–æ—Ä—Ç —à–∞–±–ª–æ–Ω–∞: ${importResult.success ? '—É—Å–ø–µ—à–Ω–æ' : '–æ—à–∏–±–∫–∞'}`);
    }

    console.log('\n3. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —à–∞–±–ª–æ–Ω–æ–≤:');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–π —à–∞–±–ª–æ–Ω
    for (const template of allTemplates) {
      console.log(`   üìã ${template.name}:`);
      console.log(`      - ID: ${template.id}`);
      console.log(`      - –ö–∞—Ç–µ–≥–æ—Ä–∏—è: ${template.category}`);
      console.log(`      - –¢–µ–≥–∏: ${template.tags.join(', ')}`);
      console.log(`      - –£–∑–ª–æ–≤ –≤ —Å—Ö–µ–º–µ: ${template.schema.nodes.length}`);
      console.log(`      - –°–≤—è–∑–µ–π –≤ —Å—Ö–µ–º–µ: ${template.schema.edges.length}`);
      
      if (template.preview?.features) {
        console.log(`      - –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏: ${template.preview.features.length}`);
      }
    }

    console.log('\n‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã —Å–∏—Å—Ç–µ–º—ã —à–∞–±–ª–æ–Ω–æ–≤ –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —Å–∏—Å—Ç–µ–º—ã —à–∞–±–ª–æ–Ω–æ–≤:', error);
    throw error;
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
if (require.main === module) {
  testTemplateSystem()
    .then(() => {
      console.log('\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!');
      process.exit(0);
    })
    .catch((error) => {
      console.error('\nüí• –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–∏–ª–æ—Å—å —Å –æ—à–∏–±–∫–æ–π:', error);
      process.exit(1);
    });
}

export { testTemplateSystem };