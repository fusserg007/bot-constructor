/**
 * –ú–µ–Ω–µ–¥–∂–µ—Ä —à–∞–±–ª–æ–Ω–æ–≤ - —Å–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≥–æ—Ç–æ–≤—ã–º–∏ —à–∞–±–ª–æ–Ω–∞–º–∏ –±–æ—Ç–æ–≤
 */
import { BotSchema } from '../types';

export interface BotTemplate {
  id: string;
  name: string;
  description: string;
  category: 'business' | 'entertainment' | 'utility' | 'education' | 'support' | 'ecommerce' | 'social';
  tags: string[];
  difficulty: 'beginner' | 'intermediate' | 'advanced';
  platforms: string[];
  schema: BotSchema;
  preview?: {
    image?: string;
    demo?: string;
    features: string[];
  };
  author?: string;
  version: string;
  createdAt: string;
  updatedAt: string;
}

export interface TemplateCategory {
  id: string;
  name: string;
  description: string;
  icon: string;
  templates: BotTemplate[];
}

export class TemplateManager {
  private static instance: TemplateManager;
  private templates: Map<string, BotTemplate> = new Map();
  private categories: Map<string, TemplateCategory> = new Map();

  private constructor() {
    this.initializeDefaultTemplates();
  }

  static getInstance(): TemplateManager {
    if (!TemplateManager.instance) {
      TemplateManager.instance = new TemplateManager();
    }
    return TemplateManager.instance;
  }

  /**
   * –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ —à–∞–±–ª–æ–Ω—ã
   */
  getAllTemplates(): BotTemplate[] {
    return Array.from(this.templates.values());
  }

  /**
   * –ü–æ–ª—É—á–∏—Ç—å —à–∞–±–ª–æ–Ω –ø–æ ID
   */
  getTemplate(id: string): BotTemplate | undefined {
    return this.templates.get(id);
  }

  /**
   * –ü–æ–ª—É—á–∏—Ç—å —à–∞–±–ª–æ–Ω—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
   */
  getTemplatesByCategory(category: string): BotTemplate[] {
    return Array.from(this.templates.values())
      .filter(template => template.category === category);
  }

  /**
   * –ü–æ–∏—Å–∫ —à–∞–±–ª–æ–Ω–æ–≤
   */
  searchTemplates(query: string, filters?: {
    category?: string;
    difficulty?: string;
    platform?: string;
    tags?: string[];
  }): BotTemplate[] {
    let results = Array.from(this.templates.values());

    // –ü–æ–∏—Å–∫ –ø–æ —Ç–µ–∫—Å—Ç—É
    if (query) {
      const searchQuery = query.toLowerCase();
      results = results.filter(template => 
        template.name.toLowerCase().includes(searchQuery) ||
        template.description.toLowerCase().includes(searchQuery) ||
        template.tags.some(tag => tag.toLowerCase().includes(searchQuery))
      );
    }

    // –§–∏–ª—å—Ç—Ä—ã
    if (filters) {
      if (filters.category) {
        results = results.filter(template => template.category === filters.category);
      }
      if (filters.difficulty) {
        results = results.filter(template => template.difficulty === filters.difficulty);
      }
      if (filters.platform) {
        results = results.filter(template => 
          template.platforms.includes(filters.platform!)
        );
      }
      if (filters.tags && filters.tags.length > 0) {
        results = results.filter(template =>
          filters.tags!.some(tag => template.tags.includes(tag))
        );
      }
    }

    return results;
  }

  /**
   * –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
   */
  getAllCategories(): TemplateCategory[] {
    return Array.from(this.categories.values());
  }

  /**
   * –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π —à–∞–±–ª–æ–Ω
   */
  addTemplate(template: BotTemplate): void {
    this.templates.set(template.id, template);
    
    // –î–æ–±–∞–≤–ª—è–µ–º –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏—é
    const category = this.categories.get(template.category);
    if (category) {
      category.templates.push(template);
    }
  }

  /**
   * –ö–ª–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —à–∞–±–ª–æ–Ω –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –±–æ—Ç–∞
   */
  cloneTemplate(templateId: string, newBotName: string): BotSchema | null {
    const template = this.templates.get(templateId);
    if (!template) return null;

    const clonedSchema: BotSchema = {
      ...template.schema,
      id: `bot_${Date.now()}`,
      name: newBotName,
      createdAt: new Date().toISOString(),
      updatedAt: new Date().toISOString()
    };

    return clonedSchema;
  }

  /**
   * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö —à–∞–±–ª–æ–Ω–æ–≤
   */
  private initializeDefaultTemplates(): void {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    this.initializeCategories();
    
    // –î–æ–±–∞–≤–ª—è–µ–º –≥–æ—Ç–æ–≤—ã–µ —à–∞–±–ª–æ–Ω—ã
    this.addWelcomeBotTemplate();
    this.addFAQBotTemplate();
    this.addSupportBotTemplate();
    this.addQuizBotTemplate();
    this.addShopBotTemplate();
  }

  /**
   * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π
   */
  private initializeCategories(): void {
    const categories: TemplateCategory[] = [
      {
        id: 'business',
        name: '–ë–∏–∑–Ω–µ—Å',
        description: '–®–∞–±–ª–æ–Ω—ã –¥–ª—è –±–∏–∑–Ω–µ—Å-–ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏',
        icon: 'üíº',
        templates: []
      },
      {
        id: 'support',
        name: '–ü–æ–¥–¥–µ—Ä–∂–∫–∞',
        description: '–ë–æ—Ç—ã –¥–ª—è –∫–ª–∏–µ–Ω—Ç—Å–∫–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –∏ FAQ',
        icon: 'üéß',
        templates: []
      },
      {
        id: 'ecommerce',
        name: '–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –∫–æ–º–º–µ—Ä—Ü–∏—è',
        description: '–ë–æ—Ç—ã –¥–ª—è –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω–æ–≤ –∏ –ø—Ä–æ–¥–∞–∂',
        icon: 'üõí',
        templates: []
      },
      {
        id: 'education',
        name: '–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ',
        description: '–û–±—É—á–∞—é—â–∏–µ –±–æ—Ç—ã –∏ –∫–≤–∏–∑—ã',
        icon: 'üìö',
        templates: []
      },
      {
        id: 'utility',
        name: '–£—Ç–∏–ª–∏—Ç—ã',
        description: '–ü–æ–ª–µ–∑–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –∏ —Å–µ—Ä–≤–∏—Å—ã',
        icon: 'üîß',
        templates: []
      }
    ];

    categories.forEach(category => {
      this.categories.set(category.id, category);
    });
  }
 
 /**
   * –®–∞–±–ª–æ–Ω –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –±–æ—Ç–∞
   */
  private addWelcomeBotTemplate(): void {
    const template: BotTemplate = {
      id: 'welcome-bot',
      name: '–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π –±–æ—Ç',
      description: '–ü—Ä–æ—Å—Ç–æ–π –±–æ—Ç –¥–ª—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –æ—Å–Ω–æ–≤–Ω—ã–º–∏ –∫–æ–º–∞–Ω–¥–∞–º–∏',
      category: 'business',
      tags: ['–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ', '–Ω–∞—á–∏–Ω–∞—é—â–∏–π', '–±–∞–∑–æ–≤—ã–π'],
      difficulty: 'beginner',
      platforms: ['telegram', 'discord', 'whatsapp'],
      schema: {
        id: 'welcome-bot-schema',
        name: '–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π –±–æ—Ç',
        nodes: [
          {
            id: 'start-trigger',
            type: 'trigger-command',
            data: { command: '/start' },
            position: { x: 100, y: 100 }
          },
          {
            id: 'welcome-action',
            type: 'action-send-message',
            data: { 
              message: '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {{userName}}! üëã\\n\\n–Ø –≤–∞—à –ø–æ–º–æ—â–Ω–∏–∫. –í–æ—Ç —á—Ç–æ —è —É–º–µ—é:\\n\\n/help - –ø–æ–∫–∞–∑–∞—Ç—å –ø–æ–º–æ—â—å\\n/about - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ\\n/contact - —Å–≤—è–∑–∞—Ç—å—Å—è —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π'
            },
            position: { x: 300, y: 100 }
          },
          {
            id: 'help-trigger',
            type: 'trigger-command',
            data: { command: '/help' },
            position: { x: 100, y: 250 }
          },
          {
            id: 'help-action',
            type: 'action-send-message',
            data: {
              message: 'üìã –°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥:\\n\\n/start - –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É\\n/help - —ç—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞\\n/about - –æ –±–æ—Ç–µ\\n/contact - —Å–≤—è–∑—å —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π\\n\\n–ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã, –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ!'
            },
            position: { x: 300, y: 250 }
          }
        ],
        edges: [
          { id: 'edge-1', source: 'start-trigger', target: 'welcome-action' },
          { id: 'edge-2', source: 'help-trigger', target: 'help-action' }
        ],
        variables: {},
        settings: {
          name: '–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π –±–æ—Ç',
          description: '–ë–∞–∑–æ–≤—ã–π –±–æ—Ç –¥–ª—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π',
          platforms: ['telegram'],
          mode: 'polling',
          variables: {}
        },
        version: '1.0.0',
        createdAt: new Date().toISOString(),
        updatedAt: new Date().toISOString()
      },
      preview: {
        features: [
          '–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π',
          '–°–ø—Ä–∞–≤–æ—á–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞',
          '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ',
          '–ë–∞–∑–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã'
        ]
      },
      author: 'Bot Constructor Team',
      version: '1.0.0',
      createdAt: new Date().toISOString(),
      updatedAt: new Date().toISOString()
    };
    this.addTemplate(template);
  }

  /**
   * –®–∞–±–ª–æ–Ω FAQ –±–æ—Ç–∞
   */
  private addFAQBotTemplate(): void {
    const template: BotTemplate = {
      id: 'faq-bot',
      name: 'FAQ –±–æ—Ç',
      description: '–ë–æ—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –æ—Ç–≤–µ—Ç–æ–≤ –Ω–∞ —á–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã',
      category: 'support',
      tags: ['faq', '–ø–æ–¥–¥–µ—Ä–∂–∫–∞', '–∞–≤—Ç–æ–æ—Ç–≤–µ—Ç—ã'],
      difficulty: 'intermediate',
      platforms: ['telegram', 'discord'],
      schema: {
        id: 'faq-bot-schema',
        name: 'FAQ –±–æ—Ç',
        nodes: [
          {
            id: 'message-trigger',
            type: 'trigger-message',
            data: {},
            position: { x: 100, y: 100 }
          },
          {
            id: 'faq-condition',
            type: 'condition-text-contains',
            data: {
              patterns: ['—Ü–µ–Ω–∞', '—Å—Ç–æ–∏–º–æ—Å—Ç—å', '–∫–æ–Ω—Ç–∞–∫—Ç—ã', '—Ä–∞–±–æ—Ç–∞', '–¥–æ—Å—Ç–∞–≤–∫–∞']
            },
            position: { x: 300, y: 100 }
          },
          {
            id: 'price-response',
            type: 'action-send-message',
            data: {
              message: 'üí∞ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ü–µ–Ω–∞—Ö –º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ –Ω–∞ –Ω–∞—à–µ–º —Å–∞–π—Ç–µ –∏–ª–∏ —É—Ç–æ—á–Ω–∏—Ç—å —É –º–µ–Ω–µ–¥–∂–µ—Ä–∞. –•–æ—Ç–∏—Ç–µ, —á—Ç–æ–±—ã —è —Å–≤—è–∑–∞–ª –≤–∞—Å —Å–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–º?'
            },
            position: { x: 500, y: 50 }
          },
          {
            id: 'contact-response',
            type: 'action-send-message',
            data: {
              message: 'üìû –ù–∞—à–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã:\\nüìß Email: support@company.com\\nüìû –¢–µ–ª–µ—Ñ–æ–Ω: +7 (999) 123-45-67\\nüåê –°–∞–π—Ç: www.company.com'
            },
            position: { x: 500, y: 150 }
          }
        ],
        edges: [
          { id: 'edge-1', source: 'message-trigger', target: 'faq-condition' },
          { id: 'edge-2', source: 'faq-condition', target: 'price-response', sourceHandle: 'price' },
          { id: 'edge-3', source: 'faq-condition', target: 'contact-response', sourceHandle: 'contact' }
        ],
        variables: {},
        settings: {
          name: 'FAQ –±–æ—Ç',
          description: '–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –æ—Ç–≤–µ—Ç—ã –Ω–∞ —á–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã',
          platforms: ['telegram'],
          mode: 'polling',
          variables: {}
        },
        version: '1.0.0',
        createdAt: new Date().toISOString(),
        updatedAt: new Date().toISOString()
      },
      preview: {
        features: [
          '–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –æ—Ç–≤–µ—Ç—ã –Ω–∞ FAQ',
          '–†–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤',
          '–ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º',
          '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–Ω—Ç–∞–∫—Ç–∞—Ö –∏ —Ä–∞–±–æ—Ç–µ'
        ]
      },
      author: 'Bot Constructor Team',
      version: '1.0.0',
      createdAt: new Date().toISOString(),
      updatedAt: new Date().toISOString()
    };
    this.addTemplate(template);
  }

  /**
   * –®–∞–±–ª–æ–Ω –±–æ—Ç–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏
   */
  private addSupportBotTemplate(): void {
    const template: BotTemplate = {
      id: 'support-bot',
      name: '–ë–æ—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏',
      description: '–ü–æ–ª–Ω–æ—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –±–æ—Ç –¥–ª—è –∫–ª–∏–µ–Ω—Ç—Å–∫–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏ —Å —Ç–∏–∫–µ—Ç-—Å–∏—Å—Ç–µ–º–æ–π',
      category: 'support',
      tags: ['–ø–æ–¥–¥–µ—Ä–∂–∫–∞', '—Ç–∏–∫–µ—Ç—ã', '–∫–ª–∏–µ–Ω—Ç—ã'],
      difficulty: 'advanced',
      platforms: ['telegram', 'discord', 'whatsapp'],
      schema: {
        id: 'support-bot-schema',
        name: '–ë–æ—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏',
        nodes: [
          {
            id: 'start-trigger',
            type: 'trigger-command',
            data: { command: '/start' },
            position: { x: 100, y: 100 }
          },
          {
            id: 'welcome-support',
            type: 'action-send-message',
            data: {
              message: 'üéß –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å–ª—É–∂–±—É –ø–æ–¥–¥–µ—Ä–∂–∫–∏!\\n\\n–í—ã–±–µ—Ä–∏—Ç–µ, —á–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å:\\n\\nüé´ /ticket - —Å–æ–∑–¥–∞—Ç—å —Ç–∏–∫–µ—Ç\\n‚ùì /faq - —á–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã\\nüìû /contact - —Å–≤—è–∑–∞—Ç—å—Å—è —Å –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º'
            },
            position: { x: 300, y: 100 }
          },
          {
            id: 'ticket-trigger',
            type: 'trigger-command',
            data: { command: '/ticket' },
            position: { x: 100, y: 250 }
          },
          {
            id: 'ticket-form',
            type: 'action-request-input',
            data: {
              message: '–û–ø–∏—à–∏—Ç–µ –≤–∞—à—É –ø—Ä–æ–±–ª–µ–º—É –ø–æ–¥—Ä–æ–±–Ω–æ:',
              variable: 'ticketDescription'
            },
            position: { x: 300, y: 250 }
          },
          {
            id: 'ticket-created',
            type: 'action-send-message',
            data: {
              message: '‚úÖ –¢–∏–∫–µ—Ç —Å–æ–∑–¥–∞–Ω! –ù–æ–º–µ—Ä: #{{ticketId}}\\n\\n–í–∞—à–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ –ø—Ä–∏–Ω—è—Ç–æ –≤ —Ä–∞–±–æ—Ç—É. –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.'
            },
            position: { x: 500, y: 250 }
          }
        ],
        edges: [
          { id: 'edge-1', source: 'start-trigger', target: 'welcome-support' },
          { id: 'edge-2', source: 'ticket-trigger', target: 'ticket-form' },
          { id: 'edge-3', source: 'ticket-form', target: 'ticket-created' }
        ],
        variables: {
          ticketDescription: '',
          ticketId: ''
        },
        settings: {
          name: '–ë–æ—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏',
          description: '–°–∏—Å—Ç–µ–º–∞ –∫–ª–∏–µ–Ω—Ç—Å–∫–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏',
          platforms: ['telegram'],
          mode: 'polling',
          variables: {}
        },
        version: '1.0.0',
        createdAt: new Date().toISOString(),
        updatedAt: new Date().toISOString()
      },
      preview: {
        features: [
          '–°–æ–∑–¥–∞–Ω–∏–µ –∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Ç–∏–∫–µ—Ç–æ–≤',
          '–°–±–æ—Ä –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø—Ä–æ–±–ª–µ–º–µ',
          '–ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π –∏ FAQ',
          '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤'
        ]
      },
      author: 'Bot Constructor Team',
      version: '1.0.0',
      createdAt: new Date().toISOString(),
      updatedAt: new Date().toISOString()
    };
    this.addTemplate(template);
  }  /
**
   * –®–∞–±–ª–æ–Ω –∫–≤–∏–∑-–±–æ—Ç–∞
   */
  private addQuizBotTemplate(): void {
    const template: BotTemplate = {
      id: 'quiz-bot',
      name: '–ö–≤–∏–∑-–±–æ—Ç',
      description: '–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –±–æ—Ç –¥–ª—è –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è –≤–∏–∫—Ç–æ—Ä–∏–Ω –∏ —Ç–µ—Å—Ç–æ–≤ —Å –ø–æ–¥—Å—á–µ—Ç–æ–º –±–∞–ª–ª–æ–≤',
      category: 'education',
      tags: ['–∫–≤–∏–∑', '–≤–∏–∫—Ç–æ—Ä–∏–Ω–∞', '–æ–±—É—á–µ–Ω–∏–µ', '—Ç–µ—Å—Ç'],
      difficulty: 'intermediate',
      platforms: ['telegram', 'discord'],
      schema: {
        id: 'quiz-bot-schema',
        name: '–ö–≤–∏–∑-–±–æ—Ç',
        nodes: [
          {
            id: 'start-quiz',
            type: 'trigger-command',
            data: { command: '/quiz' },
            position: { x: 100, y: 100 }
          },
          {
            id: 'quiz-intro',
            type: 'action-send-message',
            data: {
              message: 'üß† –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –≤–∏–∫—Ç–æ—Ä–∏–Ω—É!\\n\\n–í–∞—Å –∂–¥–µ—Ç 5 –≤–æ–ø—Ä–æ—Å–æ–≤ –Ω–∞ —Ä–∞–∑–Ω—ã–µ —Ç–µ–º—ã.\\n–ó–∞ –∫–∞–∂–¥—ã–π –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç - 1 –±–∞–ª–ª.\\n\\n–ì–æ—Ç–æ–≤—ã –Ω–∞—á–∞—Ç—å? –ù–∞–ø–∏—à–∏—Ç–µ "–¥–∞" –¥–ª—è —Å—Ç–∞—Ä—Ç–∞!'
            },
            position: { x: 300, y: 100 }
          },
          {
            id: 'start-condition',
            type: 'condition-text-contains',
            data: { pattern: '–¥–∞' },
            position: { x: 500, y: 100 }
          },
          {
            id: 'question-1',
            type: 'action-send-message',
            data: {
              message: 'üåç –í–æ–ø—Ä–æ—Å 1/5:\\n–ö–∞–∫–∞—è —Å–∞–º–∞—è –±–æ–ª—å—à–∞—è –ø–ª–∞–Ω–µ—Ç–∞ –≤ –°–æ–ª–Ω–µ—á–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ?\\n\\nA) –ú–∞—Ä—Å\\nB) –Æ–ø–∏—Ç–µ—Ä\\nC) –°–∞—Ç—É—Ä–Ω\\nD) –ó–µ–º–ª—è'
            },
            position: { x: 700, y: 100 }
          },
          {
            id: 'answer-1',
            type: 'condition-text-contains',
            data: { pattern: '—é–ø–∏—Ç–µ—Ä|b' },
            position: { x: 900, y: 100 }
          },
          {
            id: 'results-action',
            type: 'action-send-message',
            data: {
              message: 'üéâ –í–∏–∫—Ç–æ—Ä–∏–Ω–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!\\n\\n–í–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç: {{quizScore}}/5 –±–∞–ª–ª–æ–≤\\n\\n–°–ø–∞—Å–∏–±–æ –∑–∞ —É—á–∞—Å—Ç–∏–µ! –•–æ—Ç–∏—Ç–µ –ø—Ä–æ–π—Ç–∏ –µ—â–µ —Ä–∞–∑? /quiz'
            },
            position: { x: 1100, y: 100 }
          }
        ],
        edges: [
          { id: 'edge-1', source: 'start-quiz', target: 'quiz-intro' },
          { id: 'edge-2', source: 'quiz-intro', target: 'start-condition' },
          { id: 'edge-3', source: 'start-condition', target: 'question-1', sourceHandle: 'true' },
          { id: 'edge-4', source: 'question-1', target: 'answer-1' },
          { id: 'edge-5', source: 'answer-1', target: 'results-action' }
        ],
        variables: {
          quizScore: 0
        },
        settings: {
          name: '–ö–≤–∏–∑-–±–æ—Ç',
          description: '–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã –∏ —Ç–µ—Å—Ç—ã',
          platforms: ['telegram'],
          mode: 'polling',
          variables: {}
        },
        version: '1.0.0',
        createdAt: new Date().toISOString(),
        updatedAt: new Date().toISOString()
      },
      preview: {
        features: [
          '–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã',
          '–ü–æ–¥—Å—á–µ—Ç –±–∞–ª–ª–æ–≤',
          '–†–∞–∑–Ω–æ–æ–±—Ä–∞–∑–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã',
          '–ú–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è'
        ]
      },
      author: 'Bot Constructor Team',
      version: '1.0.0',
      createdAt: new Date().toISOString(),
      updatedAt: new Date().toISOString()
    };
    this.addTemplate(template);
  }

  /**
   * –®–∞–±–ª–æ–Ω –±–æ—Ç–∞ –¥–ª—è –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω–∞
   */
  private addShopBotTemplate(): void {
    const template: BotTemplate = {
      id: 'shop-bot',
      name: '–ò–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω –±–æ—Ç',
      description: '–ë–æ—Ç –¥–ª—è –ø—Ä–æ–¥–∞–∂ —Å –∫–∞—Ç–∞–ª–æ–≥–æ–º —Ç–æ–≤–∞—Ä–æ–≤, –∫–æ—Ä–∑–∏–Ω–æ–π –∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ–º –∑–∞–∫–∞–∑–æ–≤',
      category: 'ecommerce',
      tags: ['–º–∞–≥–∞–∑–∏–Ω', '–ø—Ä–æ–¥–∞–∂–∏', '–∫–∞—Ç–∞–ª–æ–≥', '–∑–∞–∫–∞–∑—ã'],
      difficulty: 'advanced',
      platforms: ['telegram', 'whatsapp'],
      schema: {
        id: 'shop-bot-schema',
        name: '–ò–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω –±–æ—Ç',
        nodes: [
          {
            id: 'start-shop',
            type: 'trigger-command',
            data: { command: '/start' },
            position: { x: 100, y: 100 }
          },
          {
            id: 'shop-menu',
            type: 'action-send-message',
            data: {
              message: 'üõí –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –º–∞–≥–∞–∑–∏–Ω!\\n\\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:\\n\\nüì± /catalog - –∫–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä–æ–≤\\nüõçÔ∏è /cart - –º–æ—è –∫–æ—Ä–∑–∏–Ω–∞\\nüìû /support - –ø–æ–¥–¥–µ—Ä–∂–∫–∞\\nüìã /orders - –º–æ–∏ –∑–∞–∫–∞–∑—ã'
            },
            position: { x: 300, y: 100 }
          },
          {
            id: 'catalog-trigger',
            type: 'trigger-command',
            data: { command: '/catalog' },
            position: { x: 100, y: 250 }
          },
          {
            id: 'catalog-display',
            type: 'action-send-message',
            data: {
              message: 'üì± –ö–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä–æ–≤:\\n\\n1Ô∏è‚É£ iPhone 15 Pro - 120,000‚ÇΩ\\n2Ô∏è‚É£ Samsung Galaxy S24 - 90,000‚ÇΩ\\n3Ô∏è‚É£ Google Pixel 8 - 70,000‚ÇΩ\\n\\n–î–ª—è –∑–∞–∫–∞–∑–∞ –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–æ–≤–∞—Ä–∞'
            },
            position: { x: 300, y: 250 }
          },
          {
            id: 'product-select',
            type: 'condition-text-contains',
            data: { pattern: '1|2|3' },
            position: { x: 500, y: 250 }
          },
          {
            id: 'add-to-cart',
            type: 'action-send-message',
            data: {
              message: '‚úÖ –¢–æ–≤–∞—Ä –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É!\\n\\n–î–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞: /cart\\n–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–æ–∫—É–ø–∫–∏: /catalog'
            },
            position: { x: 700, y: 250 }
          }
        ],
        edges: [
          { id: 'edge-1', source: 'start-shop', target: 'shop-menu' },
          { id: 'edge-2', source: 'catalog-trigger', target: 'catalog-display' },
          { id: 'edge-3', source: 'catalog-display', target: 'product-select' },
          { id: 'edge-4', source: 'product-select', target: 'add-to-cart', sourceHandle: 'true' }
        ],
        variables: {
          cart: [],
          totalAmount: 0
        },
        settings: {
          name: '–ò–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω –±–æ—Ç',
          description: '–°–∏—Å—Ç–µ–º–∞ –ø—Ä–æ–¥–∞–∂ —Å –∫–∞—Ç–∞–ª–æ–≥–æ–º –∏ –∫–æ—Ä–∑–∏–Ω–æ–π',
          platforms: ['telegram'],
          mode: 'polling',
          variables: {}
        },
        version: '1.0.0',
        createdAt: new Date().toISOString(),
        updatedAt: new Date().toISOString()
      },
      preview: {
        features: [
          '–ö–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä–æ–≤ —Å —Ü–µ–Ω–∞–º–∏',
          '–ö–æ—Ä–∑–∏–Ω–∞ –ø–æ–∫—É–ø–æ–∫',
          '–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤',
          '–ò—Å—Ç–æ—Ä–∏—è –ø–æ–∫—É–ø–æ–∫'
        ]
      },
      author: 'Bot Constructor Team',
      version: '1.0.0',
      createdAt: new Date().toISOString(),
      updatedAt: new Date().toISOString()
    };
    this.addTemplate(template);
  }
}